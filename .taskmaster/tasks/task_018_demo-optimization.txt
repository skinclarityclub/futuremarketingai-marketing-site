# Task ID: 18
# Title: Journey Guidance System - Demo Path Selection & Progress
# Status: done
# Dependencies: 17, 25
# Priority: high
# Description: Implement guided journey system with industry-based path selection, progress indicators, and floating guide to increase demo completion from current baseline to 40% improvement.
# Details:
**Problem Identified (Audit Score: 65/100)**
No clear path through demo, users can get lost exploring modules, no progress indication showing completion.

**Solution Components:**

## 1. Industry Selector (Entry Point)

```tsx
<JourneySelector onSelect={handlePathSelect}>
  <IndustryPath
    id="ecommerce"
    title="E-Commerce & Retail"
    icon="üõçÔ∏è"
    qualifier="Managing multiple sales channels?"
    description="Perfect for online stores with 100+ orders/month"
    recommended={userIntent === 'high'}
  />
  
  <IndustryPath
    id="saas"
    title="B2B SaaS"
    icon="üíª"
    qualifier="Post-PMF, scaling content?"
    description="Built for SaaS with 1000+ users and growing"
    recommended={userIntent === 'medium'}
  />
  
  <IndustryPath
    id="agency"
    title="Marketing Agency"
    icon="üéØ"
    qualifier="Managing 10+ clients?"
    description="For agencies creating content for multiple clients daily"
    recommended={userIntent === 'low'}
  />
</JourneySelector>
```

**Trigger Logic:**
- Show after industry selector (if first visit)
- Show after 5 seconds on Hero (if returning, no path selected)
- Skippable with "Let me explore freely"
- Store selection in localStorage + Zustand

## 2. Progress Indicator (Always Visible)

```tsx
<ProgressBar 
  variant="floating" // or "inline" on mobile
  position="top" // sticky
  className="z-50"
>
  <Step id="industry" label="Your Industry" completed={true} />
  <Step 
    id="features" 
    label="Explore" 
    completed={true} 
    active={true}
    icon="‚ú®"
    progress={3} // 3 modules viewed
    total={3} // Show 3 featured modules per industry, not all 9
  />
  <Step 
    id="dashboard" 
    label="Dashboard" 
    completed={false} 
    active={false}
    icon="üìä"
  />
  <Step 
    id="roi" 
    label="Calculate ROI" 
    completed={false} 
    active={false}
    icon="üí∞"
  />
  <Step 
    id="cta" 
    label="Get Started" 
    completed={false} 
    active={false}
    icon="üìÖ"
  />
</ProgressBar>
```

**Tracking Logic:**
```typescript
// Track user progress through journey
const journeyState = {
  selectedIndustry: 'ecommerce' | 'saas' | 'agency' | 'free',
  currentStep: 2, // 0-indexed
  stepsCompleted: ['industry', 'features'],
  modulesViewed: ['research-planning', 'content-pipeline', 'analytics'],
  timeSpent: 347, // seconds
  completionPercentage: 40, // %
}

// Update on every page view + module open
useEffect(() => {
  updateJourneyProgress(location.pathname, { moduleId })
  trackGA4('journey_progress', journeyState)
}, [location, moduleId])
```

## 3. Industry-Specific Module Filtering

```typescript
// Show only relevant modules per industry
const industryModules = {
  ecommerce: [1, 2, 6], // E-Commerce Path
  saas: [1, 3, 5],      // B2B SaaS Path
  agency: [1, 4, 7]      // Agency Path
}

// Filter modules based on selected industry
const visibleModules = industryModules[selectedIndustry] || allModules
```

## 4. Floating Guide (Contextual Help)

```tsx
<FloatingGuide 
  show={showGuide}
  position="bottom-right"
  variant="minimal" // or "detailed"
>
  <Avatar>
    <img src="/ai-assistant.svg" alt="Guide" />
  </Avatar>
  
  <Message>
    <Strong>Great!</Strong> You've explored 3 features.
    <br />
    <Suggestion>
      Next: See the command center in action
    </Suggestion>
  </Message>
  
  <Actions>
    <Button 
      size="sm" 
      variant="primary"
      onClick={goToNextStep}
    >
      View Dashboard ‚Üí
    </Button>
    <Button 
      size="sm" 
      variant="ghost"
      onClick={dismissGuide}
    >
      Skip Tour
    </Button>
  </Actions>
</FloatingGuide>
```

**Guide Trigger Rules (Proxy-Based):**
```typescript
const guideRules = [
  {
    trigger: 'industry_selected === "ecommerce" && !viewed_module_2',
    message: 'See how other online stores automate product content',
    action: '/explorer?module=2',
  },
  {
    trigger: 'team_size >= 10 && !calculated_roi',
    message: 'Calculate savings for your team size',
    action: '/calculator',
  },
  {
    trigger: 'modules_viewed >= 3 && !visited_dashboard',
    message: 'Next: See the command center in action',
    action: '/dashboard',
  },
  {
    trigger: 'roi_calculated && !booked_call',
    message: 'Based on your savings for teams of 10-50 people, let\'s schedule a call',
    action: 'calendly',
  },
]
```

## 5. Completion Celebration

```tsx
<CompletionModal show={allStepsComplete}>
  <Confetti />
  <Icon>üéâ</Icon>
  <Title>You've Completed the Demo!</Title>
  <Stats>
    <Stat>
      <Value>15 minutes</Value>
      <Label>Time spent</Label>
    </Stat>
    <Stat>
      <Value>3/3</Value>
      <Label>Features explored</Label>
    </Stat>
    <Stat>
      <Value>Team of 10-50</Value>
      <Label>Your potential savings</Label>
    </Stat>
  </Stats>
  
  <Reward>
    <Badge>üéÅ Bonus Unlocked</Badge>
    <Text>Free Implementation Checklist + Roadmap</Text>
  </Reward>
  
  <CTA>
    <Button size="lg" glow onClick={openCalendly}>
      Claim Your Consultation ‚Üí
    </Button>
    <Button size="md" variant="secondary" onClick={downloadSummary}>
      Download Demo Summary
    </Button>
  </CTA>
</CompletionModal>
```

**New Components to Create:**
- `src/components/journey/JourneySelector.tsx`
- `src/components/journey/ProgressBar.tsx`
- `src/components/journey/FloatingGuide.tsx`
- `src/components/journey/CompletionModal.tsx`
- `src/hooks/useJourneyTracking.ts`
- `src/stores/journeyStore.ts` (Zustand)

**Files to Modify:**
- `src/App.tsx` - Add ProgressBar at root level
- `src/pages/Hero.tsx` - Add JourneySelector after IndustrySelector
- `src/pages/Explorer.tsx` - Integrate FloatingGuide
- `src/utils/analytics.ts` - Add journey tracking events

**Analytics Events:**
```typescript
// Track these events
trackGA4('journey_industry_selected', { industry: 'ecommerce' })
trackGA4('journey_step_completed', { step: 'features', timeSpent: 120 })
trackGA4('journey_guide_interaction', { action: 'next_step_clicked' })
trackGA4('journey_completed', { industry: 'saas', totalTime: 847 })
```

**Expected Impact:** +30-40% completion rate (clearer path, less overwhelm)
**Time Estimate:** 8-10 hours
**Priority:** HIGH - Second biggest conversion lever
**Dependencies:** Add Task #25 (ICP Messaging)

# Test Strategy:
**Testing Strategy:**

1. **Journey Flow Testing:**
   - Test all 3 industry paths (ecommerce, saas, agency)
   - Verify step tracking accuracy
   - Test "skip tour" functionality
   - Verify localStorage persistence

2. **Progress Indicator:**
   - Visual consistency across all pages
   - Mobile responsiveness (collapse on small screens)
   - Keyboard navigation (Tab through steps)
   - Click step to jump (if allowed in path)

3. **Industry-Specific Module Filtering:**
   - Verify correct modules shown for each industry
   - Test switching between industries
   - Confirm module counts match expected (3 per industry)

4. **Floating Guide:**
   - Trigger conditions work correctly
   - Industry-specific messages appear appropriately
   - Dismissible and doesn't reappear
   - Respects user preference (don't show again)
   - Mobile positioning (bottom-center)

5. **Completion Modal:**
   - Shows only when all steps truly complete
   - Confetti animation performs well
   - Download/CTA buttons functional
   - Metrics accurate (time, features viewed)

6. **Analytics Validation:**
   ```typescript
   // Verify these events fire correctly
   'journey_industry_selected'
   'journey_step_completed'
   'journey_progress' // every 10% increment
   'journey_guide_shown'
   'journey_guide_dismissed'
   'journey_completed'
   ```

7. **A/B Test Setup:**
   - Control: No journey guide (current)
   - Treatment: Full journey system
   - Measure: Completion rate, time-to-CTA, CTA clicks

8. **User Testing:**
   - 5 users: "Complete the demo"
   - Without guidance: Baseline completion
   - With guidance: Target +40% completion
   - Measure: Confusion points, time to complete

# Subtasks:
## 1. Develop Industry Selector Component and Entry Logic [cancelled]
### Dependencies: None
### Description: Create the JourneySelector component with industry-specific paths and implement logic for entry triggers, selection persistence, and skip functionality.
### Details:
Build `JourneySelector.tsx` with three industry options (ecommerce, saas, agency), including icons, qualifiers, and descriptions. Implement trigger logic to show selector on first visit or after delay, allow skipping, and store selection in localStorage and Zustand. Integrate into Hero page after IndustrySelector.

## 2. Implement Progress Indicator and Journey Tracking [cancelled]
### Dependencies: 18.1
### Description: Create a floating ProgressBar component that visually tracks user progress through demo steps and integrates with journey tracking logic.
### Details:
Develop `ProgressBar.tsx` to display steps (industry, features, dashboard, ROI, CTA) with completion and active states. Ensure sticky positioning and mobile adaptation. Build `useJourneyTracking.ts` hook and update journey state on page/module views. Add analytics events for step completion and progress.

## 3. Integrate Industry-Specific Module Filtering [cancelled]
### Dependencies: 18.1
### Description: Filter and display demo modules based on the selected industry path to ensure relevance and reduce user overwhelm.
### Details:
Implement logic in Explorer page to show only modules relevant to the selected industry using the `industryModules` mapping. Ensure fallback to all modules if no industry is selected. Update UI to reflect filtered modules and featured count.

## 4. Build Floating Guide Component with Contextual Triggers [cancelled]
### Dependencies: 18.2, 18.3
### Description: Create FloatingGuide component that provides contextual help, suggestions, and next-step actions based on user journey state and proxy-based rules.
### Details:
Develop `FloatingGuide.tsx` with avatar, message, suggestions, and action buttons. Implement trigger rules to show guide based on journey state (modules viewed, ROI calculated, etc.). Integrate into Explorer page and ensure guide can be dismissed or skipped.

## 5. Implement Completion Celebration Modal and Rewards [cancelled]
### Dependencies: 18.2, 18.4
### Description: Create CompletionModal component to celebrate demo completion, display user stats, and offer rewards and next-step CTAs.
### Details:
Build `CompletionModal.tsx` with confetti, stats, reward badge, and CTA buttons (consultation, summary download). Trigger modal when all journey steps are complete. Integrate with journey tracking and analytics for completion event.

