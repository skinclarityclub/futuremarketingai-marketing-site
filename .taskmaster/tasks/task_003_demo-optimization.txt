# Task ID: 3
# Title: Enhance ROI Calculator with Personalization and Comparison
# Status: pending
# Dependencies: 1
# Priority: high
# Description: Upgrade the calculator to include industry-specific inputs, personalized calculations, and a 'with vs without automation' comparison.
# Details:
Refactor `CalculatorV2` to add new fields (industry, platforms, frequency, costs, tools). Use React Hook Form v7+ for form state. Integrate industry benchmarks (static JSON or API). Implement side-by-side comparison with a new `ComparisonTable` component. Use Chart.js or Recharts for visualizations. Add share (URL params) and PDF export (react-pdf or jsPDF). Persist inputs to localStorage and URL. Ensure accessibility and mobile usability.
<info added on 2025-10-02T13:23:20.522Z>
Implement a "Before-After" comparison framework that highlights the pain points and solutions:

1. Add a pre-calculator section titled "Wat kost je huidige aanpak?" that captures:
   - Quick input fields for hours/week spent and current monthly costs
   - Immediate pain point visualization showing "Je verliest €X/maand en Y uren/week"

2. Restructure the ComparisonTable component to display a clear side-by-side comparison:
   - Left column: "Your Current Situation" using red/warning color scheme
     * Manual hours per week
     * Monthly costs
     * Campaign output
     * ROI (labeled as "Unknown/Unmeasurable")
   - Right column: "With Future Marketing AI" using green/success color scheme
     * Reduced automated hours
     * Monthly cost savings
     * Increased campaign output with multiplier
     * Clear ROI percentage

3. Enhance visualization components:
   - Leverage existing AnimatedMetric component for key metrics
   - Create a new ComparisonCard component showing before-after states
   - Add transformation arrows between states
   - Highlight savings with neon green accents

This approach transforms the calculator from a feature showcase into a problem-solution proof by emphasizing the contrast between current pain points and the improved future state with automation.
</info added on 2025-10-02T13:23:20.522Z>

# Test Strategy:
Write integration tests for form logic, calculations, and comparison rendering. Validate PDF and share functionality. Conduct user testing for completion rate and clarity.

# Subtasks:
## 1. Refactor CalculatorV2 to Support Industry-Specific and Personalized Inputs [done]
### Dependencies: None
### Description: Update the CalculatorV2 component to include new fields for industry, platforms, frequency, costs, and tools, enabling personalized and industry-specific calculations.
### Details:
Redesign the form schema and UI to capture all required inputs. Ensure type safety and maintainability by using TypeScript interfaces aligned with the new fields.

## 2. Integrate React Hook Form v7+ for Form State Management [done]
### Dependencies: 3.1
### Description: Implement React Hook Form v7+ to manage form state, validation, and submission logic for the enhanced calculator.
### Details:
Replace existing form logic with React Hook Form v7+ hooks. Ensure all new and existing fields are registered and validated according to business rules.

## 3. Incorporate Industry Benchmarks and Data Sources [done]
### Dependencies: 3.1
### Description: Integrate static JSON or API-based industry benchmarks to inform personalized ROI calculations.
### Details:
Source or define benchmark datasets for relevant industries. Implement logic to fetch and apply these benchmarks dynamically based on user input.
<info added on 2025-10-02T14:50:46.494Z>
Implemented comprehensive industry benchmark data based on extensive research:

- Enterprise metrics now reflect realistic market values:
  - System Cost: €15,000/month (enterprise pricing)
  - Content Output: 15x multiplier (100 manual → 1,500 AI posts/month)
  - Time Saved: 80h per team member/month (480h total for 6-person team)
  - ROI: 285% (within industry-realistic 200-400% range)
  - ROAS: 30% improvement baseline
  - Revenue per Campaign: €3,500 (conservative B2B estimate)

Research-backed benchmark data shows:
- Manual content teams (5-8 FTE): €30K-€60K/month, producing 100-300 posts/month
- AI-automated teams: €15K platform cost + €10K-€20K for smaller team
- Industry standard ROI: 200-400% within 12-18 months
- Typical time savings: 200-600+ hours/month
- Content production multiplier: 10-50x

All constants updated in src/utils/calculations.ts and default values set in src/pages/Calculator.tsx (Team: 6, Salary: €55K, Posts: 100). Hero statistics updated with these realistic metrics.
</info added on 2025-10-02T14:50:46.494Z>

## 4. Develop Side-by-Side Comparison and Visualization Components [done]
### Dependencies: 3.2, 3.3
### Description: Create a ComparisonTable component and integrate Chart.js or Recharts to display 'with vs without automation' results visually.
### Details:
Design and implement a responsive table for side-by-side comparison. Add charts for key metrics. Ensure accessibility and mobile usability.

## 5. Implement Sharing, Export, and Persistence Features [done]
### Dependencies: 3.4
### Description: Enable sharing via URL parameters, PDF export (using react-pdf or jsPDF), and persist user inputs to localStorage and URL.
### Details:
Add logic to serialize form state to URL and localStorage. Integrate PDF export functionality. Ensure all features work seamlessly across devices and are accessible.
<info added on 2025-10-02T16:13:54.910Z>
Sharing and export features have been successfully implemented and styled:

1. URL Sharing (useShareCalculator hook):
   - Calculator inputs load from URL parameters (priority: URL > localStorage > defaults)
   - Generates shareable URLs with current calculator values
   - Copy to clipboard functionality
   - Native Web Share API support for mobile devices

2. Modal Styling (ShareExportButtons):
   - Improved contrast and visibility with white text and bold fonts
   - Gradient backgrounds with colored borders
   - Large interactive cards with hover effects
   - Icons and arrows for visual feedback
   - Info box with blue accent
   - Styled link preview box
   - Fully visible overlay modal

3. PDF Export (pdfExport.ts):
   - Professional redesign with:
     - Purple gradient header with white branding
     - Light gray input summary box with emojis and clear labels
     - Prominent ROI display in green rounded box
     - Two-column metrics grid with color-coded backgrounds
     - Yearly projection in light green callout box
     - Charts and tables with emoji headers
     - Consistent footer on all pages

All features have been tested and confirmed working, including modal visibility, PDF layout, URL sharing, localStorage persistence, and animations/hover effects.
</info added on 2025-10-02T16:13:54.910Z>

